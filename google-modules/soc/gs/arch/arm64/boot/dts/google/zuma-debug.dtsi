// SPDX-License-Identifier: GPL-2.0-only
/*
 * debug device tree source code for Zuma SoC
 *
 * Copyright 2022 Google LLC.
 */

#include <dt-bindings/interrupt-controller/zuma.h>
#include "zuma-ppmu.dtsi"
/ {
	dss: dss {
		compatible = "google,debug-snapshot";
		freq_names = "LIT", "MID", "BIG", "INT", "MIF", "ISP",
				"DISP", "INTCAM", "TPU", "TNR", "MFC",
				"BO";
		memory-region = <&header>, <&log_kevents>, <&log_bcm>, <&log_s2d>,
				<&log_arrdumpreset>, <&log_arrdumppanic>,
				<&log_slcdump>, <&log_preslcdump>,
				<&log_itmon>;
		panic-action = <GO_DEFAULT_ID>;
	};

	hardlockup-debugger {
		compatible = "google,hardlockup-debug";
		use_multistage_wdt_irq = <800>;
	};

	hardlockup-watchdog {
		compatible = "google,hardlockup-watchdog";
		sampling_time = <4>;
		opportunity_count = <3>;
		panic = <1>;
	};

	dss-built {
		compatible = "google,debug-snapshot-built";
		memory-region = <&header>;
	};

	dss-qdump {
		compatible = "google,debug-snapshot-qdump";
	};

	dss-sfrdump {
		compatible = "google,debug-snapshot-sfrdump";
		/*
		 * -----------<< Example >>-------------------
		 * dump-info {
		 *	#address-cells = <1>;
		 *	#size-cells = <1>;
		 *
		 *	gic-setenable {
		 *		reg = <0x11f01100 0x100>;
		 *	};
		 *	gic-setpend {
		 *		reg = <0x11f01200 0x100>;
		 *	};
		 *	gic-setactive {
		 *		reg = <0x11f01300 0x100>;
		 *	};
		 *};
		 */
	};

	dss-debug-kinfo {
		compatible = "google,debug-snapshot-debug-kinfo";
		memory-region = <&debug_kinfo_reserved>;
	};

	exynos-debug-test {
		compatible = "google,exynos-debug-test";
		ps_hold_control_offset = <0x3e9c>;
		nr_cpu = <0x9>;
		nr_little_cpu = <0x4>;
		nr_mid_cpu = <0x4>;
		nr_big_cpu = <0x1>;
		little_cpu_start = <0x0>;
		mid_cpu_start = <0x4>;
		big_cpu_start = <0x8>;
	};

	keydebug {
		compatible = "keydebug";
		key_down_delay = <6000>;
		keys_down = <116 115>;
		dbg_fn_delay = <2000>;
	};

	debug-kinfo {
		compatible = "google,debug-kinfo";
		memory-region = <&debug_kinfo_reserved>;
	};

	boot-metrics {
		compatible = "google,boot-metrics";

		reg = <0x0 0x02038000 0x00001000>;
		reg-names = "ns_sram_base";
		offset = <0x880>;
	};

	pixel-suspend-diag {
		compatible = "google,pixel-suspend-diag";
	};

	pmu@30000000 {
		compatible = "arm,ci-700";
		reg = <0x0 0x30000000 0x4000000>;
		interrupts = <GIC_SPI IRQ_CPUCL0_INTREQPMU_NID68_CPUCL0 IRQ_TYPE_LEVEL_HIGH>;
	};

	itmon: exynos-itmon {
		compatible = "samsung,exynos-itmon-v2";
		memory-region = <&log_itmon>;
		interrupts =
			<GIC_SPI IRQ_TREX_D_NOCL1A_debugInterrupt_NOCL1A
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_NOCL1B_debugInterrupt_NOCL1B
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_NOCL2AA_debugInterrupt_NOCL2AA
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_NOCL2AB_debugInterrupt_NOCL2AB
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_NOCL0_debugInterrupt_NOCL0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_NOCL1A_debugInterrupt_NOCL1A
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_NOCL1B_debugInterrupt_NOCL1B
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_NOCL2AA_debugInterrupt_NOCL2AA
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_NOCL2AB_debugInterrupt_NOCL2AB
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_NOCL0_debugInterrupt_NOCL0
							IRQ_TYPE_LEVEL_HIGH>;
		interrupt-affinity = <0xff>;
		status = "ok";
	};

	booker {
		compatible = "google,booker-ci";
		reg_base = <0x30000000>;
		interrupts =
			<GIC_SPI IRQ_CPUCL0_INTREQERRNS_NID68_CPUCL0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_INTREQERRS_NID68_CPUCL0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_INTREQFAULTNS_NID68_CPUCL0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_INTREQFAULTS_NID68_CPUCL0
							IRQ_TYPE_LEVEL_HIGH>;
		interrupt-names = "BCI: Non-secure error",
			"BCI: Secure error",
			"BCI: Non-secure fault",
			"BCI: Secure fault";
		interrupt-is-secure = <0>, <1>, <0>, <1>;
		interrupt-is-error = <1>, <1>, <0>, <0>;
		status = "ok";
		node0 {
			device_type = "booker-cfg";
			offset = <0x0>;
			id = <68>;
		};
		node1 {
			device_type = "booker-mtsx";
			offset = <0x210000>;
			id = <4>;
		};
		node2 {
			device_type = "booker-mtsx";
			offset = <0x250000>;
			id = <5>;
		};
		node3 {
			device_type = "booker-mtsx";
			offset = <0x1210000>;
			id = <36>;
		};
		node4 {
			device_type = "booker-mtsx";
			offset = <0x1250000>;
			id = <37>;
		};
		node5 {
			device_type = "booker-hnf";
			offset = <0x390000>;
			id = <6>;
		};
		node6 {
			device_type = "booker-hnf";
			offset = <0x3d0000>;
			id = <7>;
		};
		node7 {
			device_type = "booker-hnf";
			offset = <0x1390000>;
			id = <38>;
		};
		node8 {
			device_type = "booker-hnf";
			offset = <0x13D0000>;
			id = <39>;
		};
		node9 {
			device_type = "booker-rnf";
			offset = <0xA0000>;
			id = <0>;
		};
		node10 {
			device_type = "booker-rnf";
			offset = <0x10A0000>;
			id = <32>;
		};
		node11 {
			device_type = "booker-rnf";
			offset = <0x20A0000>;
			id = <64>;
		};
		node12 {
			device_type = "booker-rnd";
			offset = <0x280000>;
			id = <2>;
		};
		node13 {
			device_type = "booker-rnd";
			offset = <0x1280000>;
			id = <34>;
		};
		node14 {
			device_type = "booker-hni";
			offset = <0x2180000>;
			id = <66>;
		};
		node15 {
			device_type = "booker-hnd";
			offset = <0x2150000>;
			id = <68>;
		};
		node16 {
			device_type = "booker-xp";
			offset = <0x20000>;
			id = <0>;
		};
		node17 {
			device_type = "booker-xp";
			offset = <0x1020000>;
			id = <32>;
		};
		node18 {
			device_type = "booker-xp";
			offset = <0x2020000>;
			id = <64>;
		};
	};

	coresight@2B000000 {
		compatible = "google,exynos-coresight";
		dbg_base = <0x2B110000>, <0x2B210000>, <0x2B310000>, <0x2B410000>,
			   <0x2B510000>, <0x2B610000>, <0x2B710000>, <0x2B810000>, <0x2B910000>;
		cti_base = <0x2B1E0000>, <0x2B2E0000>, <0x2B3E0000>, <0x2B4E0000>,
			   <0x2B5E0000>, <0x2B6E0000>, <0x2B7E0000>, <0x2B8E0000>, <0x2B9E0000>;
		pmu_base = <0x2B120000>, <0x2B220000>, <0x2B320000>, <0x2B420000>,
			   <0x2B520000>, <0x2B620000>, <0x2B720000>, <0x2B820000>, <0x2B920000>;
		sgi_base = <0x10450000>, <0x10470000>, <0x10490000>, <0x104B0000>,
			   <0x104D0000>, <0x104F0000>, <0x10510000>, <0x10530000>, <0x10550000>;
		gpr_base = <0x2A001000>;
		dbgack-mask = <0x1ff00000>;
		halt = <1>;
		retention = <1>;
		status = "okay";
	};

	ecc-handler {
		compatible = "google,exynos-ecc-handler";
		interrupts = <GIC_SPI IRQ_CPUCL0_CLUSTERERRIRQ_CPUCL0 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_COMPLEXERRIRQ_CPUCL0 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_COMPLEXERRIRQ_0_CPUCL0 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_0_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE0 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_1_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE1 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_2_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE2 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_3_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE3 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_4_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE4 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_5_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE5 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_6_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE6 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_7_CPUCL0 IRQ_TYPE_LEVEL_HIGH>, /* CORE7 */
			<GIC_SPI IRQ_CPUCL0_ERRIRQ_8_CPUCL0 IRQ_TYPE_LEVEL_HIGH>; /* CORE8 */
		interrupt-names = "Uncorrectable errors on the L3 data, tag or snoop filter RAMs",
			"Core0-1 Complex, Uncorrectable errors on the L2 data or tag RAMs",
			"Core2-3 Complex, Uncorrectable errors on the L2 data or tag RAMs",
			"Core0, Uncorrectable errors on the L1 data or tag RAMs",
			"Core1, Uncorrectable errors on the L1 data or tag RAMs",
			"Core2, Uncorrectable errors on the L1 data or tag RAMs",
			"Core3, Uncorrectable errors on the L1 data or tag RAMs",
			"Core4, Uncorrectable errors on the L1 data, tag or L2 data, tag RAMs",
			"Core5, Uncorrectable errors on the L1 data, tag or L2 data, tag RAMs",
			"Core6, Uncorrectable errors on the L1 data, tag or L2 data, tag RAMs",
			"Core7, Uncorrectable errors on the L1 data, tag or L2 data, tag RAMs",
			"Core8, Uncorrectable errors on the L1 data, tag or L2 data, tag RAMs";
		interrupt-affinity = <0x1ff>, <0x3>, <0xc>,
			<0x1>, <0x2>, <0x4>, <0x8>,
			<0x10>, <0x20>, <0x40>, <0x80>, <0x100>;
	};

	exynos-etm {
		compatible = "google,exynos-etm";
		cs_base = <0x2A000000>;
		boot-start = <0>;
		funnel-num = <3>;
		etf-num = <2>;
		trex-num = <4>;
		/* funnel-port = <(funnel num) (port num)>; */
		etm0 {
			device_type = "etm";
			offset = <0x1130000>;
			funnel-port = <0 0>;
		};
		etm1 {
			device_type = "etm";
			offset = <0x1230000>;
			funnel-port = <0 0>;
		};
		etm2 {
			device_type = "etm";
			offset = <0x1330000>;
			funnel-port = <0 0>;
		};
		etm3 {
			device_type = "etm";
			offset = <0x1430000>;
			funnel-port = <0 0>;
		};
		etm4 {
			device_type = "etm";
			offset = <0x1530000>;
			funnel-port = <0 0>;
		};
		etm5 {
			device_type = "etm";
			offset = <0x1630000>;
			funnel-port = <0 0>;
		};
		etm6 {
			device_type = "etm";
			offset = <0x1730000>;
			funnel-port = <0 0>;
		};
		etm7 {
			device_type = "etm";
			offset = <0x1830000>;
			funnel-port = <0 0>;
		};
		etm8 {
			device_type = "etm";
			offset = <0x1930000>;
			funnel-port = <0 0>;
		};
		etf0@4000 {
			device_type = "etf";
			offset = <0x4000>;
			funnel-port = <2 0>;
		};
		etf1@5000 {
			device_type = "etf";
			offset = <0x5000>;
			funnel-port = <2 1>;
		};
		funnel0@7000 {
			device_type = "funnel";
			offset = <0x7000>;
		};
		funnel1@8000 {
			device_type = "funnel";
			offset = <0x8000>;
		};
		funnel2@9000 {
			device_type = "funnel";
			offset = <0x9000>;
		};
		etr@A000 {
			device_type = "etr";
			sfr_base = <0x2A00C000 0x100>;
			qch-offset = <0x2c>;
			offset = <0xA000>;
			buf-size = <0x100000>;
		};
		bdu@10000 {
			device_type = "bdu";
			offset = <0x10000>;
			funnel-port = <1 5>;
		};
		bdu_etf@11000 {
			device_type = "bdu_etf";
			offset = <0x11000>;
		};
		trex0 {
			device_type = "trex";
			mux_ctrl = <0x66>;
			dbg_trace_addr = <0x1ea83010>;
			dbg_trace_val = <5>;
		};
		trex1 {
			device_type = "trex";
			mux_ctrl = <0x77>;
			dbg_trace_addr = <0x1f603010>;
			dbg_trace_val = <26>;
		};
		trex2 {
			device_type = "trex";
			mux_ctrl = <0x88>;
			dbg_trace_addr = <0x204e3010>;
			dbg_trace_val = <8>;
		};
		trex3 {
			device_type = "trex";
			mux_ctrl = <0x55>;
			dbg_trace_addr = <0x1e503010>;
			dbg_trace_val = <8>;
		};
	};

	etr-miu@110D0000 {
		compatible = "google,gs101-etr-miu";
		reg = <0x0 0x110D0000 0x100>;
		tmc_buf_addr = <0x00000010 0x00000000>;
		tmc_buf_size = <0x10000000>;
	};

	ete0 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu0>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete0_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port0>;
				};
			};
		};
	};

	ete1 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu1>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete1_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port1>;
				};
			};
		};
	};

	ete2 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu2>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete2_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port2>;
				};
			};
		};
	};

	ete3 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu3>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete3_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port3>;
				};
			};
		};
	};

	ete4 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu4>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete4_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port4>;
				};
			};
		};
	};

	ete5 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu5>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete5_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port5>;
				};
			};
		};
	};

	ete6 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu6>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete6_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port6>;
				};
			};
		};
	};

	ete7 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu7>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete7_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port7>;
				};
			};
		};
	};

	ete8 {
		compatible = "arm,embedded-trace-extension";
		cpu = <&cpu8>;

		arm,coresight-loses-context-with-cpu;

		out-ports {
			port {
				ete8_out_port: endpoint {
					remote-endpoint = <&funnel0_in_port8>;
				};
			};
		};
	};

	funnel0 {
		compatible = "arm,coresight-static-funnel";

		coresight-name = "coresight-funnel0";

		out-ports {
			port {
				funnel0_out_port: endpoint {
					remote-endpoint = <&funnel1_in_port0>;
				};
			};
		};

		in-ports {
			port@0 {
				reg = <0>;
				funnel0_in_port0: endpoint {
					remote-endpoint = <&ete0_out_port>;
				};
			};

			port@1 {
				reg = <1>;
				funnel0_in_port1: endpoint {
					remote-endpoint = <&ete1_out_port>;
				};
			};

			port@2 {
				reg = <2>;
				funnel0_in_port2: endpoint {
					remote-endpoint = <&ete2_out_port>;
				};
			};

			port@3 {
				reg = <3>;
				funnel0_in_port3: endpoint {
					remote-endpoint = <&ete3_out_port>;
				};
			};

			port@4 {
				reg = <4>;
				funnel0_in_port4: endpoint {
					remote-endpoint = <&ete4_out_port>;
				};
			};

			port@5 {
				reg = <5>;
				funnel0_in_port5: endpoint {
					remote-endpoint = <&ete5_out_port>;
				};
			};

			port@6 {
				reg = <6>;
				funnel0_in_port6: endpoint {
					remote-endpoint = <&ete6_out_port>;
				};
			};

			port@7 {
				reg = <7>;
				funnel0_in_port7: endpoint {
					remote-endpoint = <&ete7_out_port>;
				};
			};

			port@8 {
				reg = <8>;
				funnel0_in_port8: endpoint {
					remote-endpoint = <&ete8_out_port>;
				};
			};
		};
	};

	funnel1: funnel@2a007000 {
		compatible = "arm,primecell";
		arm,primecell-periphid = <0x000bb908>;

		reg = <0 0x2a007000 0x1000>;
		reg-names = "funnel-base";

		coresight-name = "coresight-funnel1";

		clocks = <&clock ATCLK>;
		clock-names = "apb_pclk";

		out-ports {
			port {
				funnel1_out_port: endpoint {
					remote-endpoint = <&etf0_in_port>;
				};
			};
		};

		in-ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				funnel1_in_port0: endpoint {
					remote-endpoint = <&funnel0_out_port>;
				};
			};
		};
	};

	funnel2: funnel@2a009000 {
		compatible = "arm,primecell";
		arm,primecell-periphid = <0x000bb908>;

		reg = <0 0x2a009000 0x1000>;
		reg-names = "funnel-base";

		coresight-name = "coresight-funnel2";

		clocks = <&clock ATCLK>;
		clock-names = "apb_pclk";

		out-ports {
			port {
				funnel2_out_port: endpoint {
					remote-endpoint = <&etr_in_port>;
				};
			};
		};

		in-ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				funnel2_in_port0: endpoint {
					remote-endpoint = <&etf0_out_port>;
				};
			};
		};
	};

	etf0: etf@2a004000 {
		compatible = "arm,coresight-tmc", "arm,primecell";
		arm,primecell-periphid = <0x001bb961>;
		reg = <0 0x2a004000 0x1000>;

		coresight-name = "coresight-etf0";

		clocks = <&clock ATCLK>;
		clock-names = "apb_pclk";

		in-ports {
			port {
				etf0_in_port: endpoint {
					remote-endpoint = <&funnel1_out_port>;
				};
			};
		};

		out-ports {
			port {
				etf0_out_port: endpoint {
					remote-endpoint = <&funnel2_in_port0>;
				};
			};
		};
	};

	etr: etr@2a00a000 {
		compatible = "arm,coresight-tmc", "arm,primecell";
		arm,primecell-periphid = <0x001bb961>;
		reg = <0 0x2a00a000 0x1000>;

		coresight-name = "coresight-etr";
		arm,scatter-gather;

		clocks = <&clock ATCLK>;
		clock-names = "apb_pclk";

		in-ports {
			port {
				etr_in_port: endpoint {
					remote-endpoint = <&funnel2_out_port>;
				};
			};
		};
	};

	exynos-adv_tracer {
		compatible = "google,exynos-adv-tracer";
		reg = <0x0 0x15260000 0x1000>;
		reg-names = "mailbox";
		interrupts = <GIC_SPI IRQ_MAILBOX_DBGCORE2AP_ALIVE IRQ_TYPE_LEVEL_HIGH>;
		pmu-dbgcore-config = <0x3080>;
		pmu-dbgcore-status = <0x3084>;
		intr-bitoffset = <0>;
		irq_affinity = "2-3";
		status = "okay";
	};

	exynos_adv_tracer_s2d {
		compatible = "google,exynos-adv-tracer-s2d";
		plugin-len = <3>;
		plugin-name = "S2D";
		pmu-burnin-ctrl = <0x3cd0>;
		sel-scanmode-bit = <25>;
		dbgsel-sw-bit = <4>;
		blk-list = "AOC", "AOCCORE", "AUR", "AURCORE", "BW",
			   "BWCORE","CMU", "CPUCL0", "CLUSTER0", "DPUB",
			   "DPUF0", "DPUF1", "EH", "G2D", "G3D",
			   "GPU", "GDC", "GSA", "GSE", "HSI0",
			   "HSI1", "HSI2", "ISPFE", "ISPFECORE", "MCSC",
			   "MFC", "MIF1", "MIF2", "MIF3", "MISC",
			   "NOCL0", "NOCL1A", "NOCL1B", "NOCL2AA", "NOCL2AB",
			   "PERIC0", "PERIC1", "RGBP", "TNR", "TPU",
			   "TPUCORE", "YUVP", "SLC0", "SLC1", "SLC2",
			   "SLC3";

		status = "okay";
	};

	exynos-ehld {
		compatible = "google,exynos-ehld";
		#address-cells = <1>;
		#size-cells = <1>;
		cs_base = <0x2b000000>;
		sgi_base = <0x10450000>, <0x10470000>, <0x10490000>, <0x104B0000>,
			   <0x104D0000>, <0x104F0000>, <0x10510000>, <0x10530000>, <0x10550000>;
		gic_rd_base = <0x10440000>, <0x10460000>, <0x10480000>, <0x104A0000>,
			      <0x104C0000>, <0x104E0000>, <0x10500000>, <0x10520000>, <0x10540000>;
		status = "ok";

		dbgc {
			/* IPC */
			plugin-len = <4>;
			plugin-name = "ELD";
			support = <1>;
			interval = <1000>;
			warn-count = <4>;
			use-tick-timer = <0>;
		};

		cpu0 {
			dbg-offset = <0x110000>;
		};
		cpu1 {
			dbg-offset = <0x210000>;
		};
		cpu2 {
			dbg-offset = <0x310000>;
		};
		cpu3 {
			dbg-offset = <0x410000>;
		};
		cpu4 {
			dbg-offset = <0x510000>;
		};
		cpu5 {
			dbg-offset = <0x610000>;
		};
		cpu6 {
			dbg-offset = <0x710000>;
		};
		cpu7 {
			dbg-offset = <0x810000>;
		};
		cpu8 {
			dbg-offset = <0x910000>;
		};
	};

	sjtag_ap {
		compatible = "google,sjtag";
		ms-per-tick = <5590>;
		ipc-timeout-ms = <3000>;
		pubkey = /bits/ 8 <0x25 0x67 0x3b 0x55 0xc9 0xb4 0x7b 0x4c 0x15 0xd3 0x78 0x42
				   0xbb 0x52 0x3f 0x77 0x94 0xa2 0xf6 0x4f 0x81 0xf2 0xe4 0x84
				   0xd4 0x13 0x89 0x82 0x3d 0x58 0x30 0xa0 0x2d 0xe8 0x5c 0xc1
				   0xd8 0x34 0x61 0x8c 0x82 0x5b 0x63 0x7f 0x94 0x12 0xa9 0x36
				   0x5c 0xed 0x76 0x39 0x12 0xd2 0x98 0x2c 0x02 0x6a 0x5f 0x6d
				   0x12 0x7d 0x4c 0x06 0xa5 0x00 0x00 0x00 0x45 0x09 0x4e 0x61
				   0x0c 0x8e 0x17 0x9d 0x58 0xab 0xf5 0x92 0xfa 0x9f 0x26 0x0c
				   0x5f 0xe8 0x58 0xd6 0xec 0xb9 0x46 0x59 0x75 0x6d 0x0a 0xca
				   0xf9 0xe3 0x7d 0x57 0x5f 0x89 0x6f 0x46 0xb8 0xd1 0xda 0x1b
				   0x71 0x69 0x81 0x19 0x6d 0x78 0x9d 0xbf 0xa9 0x18 0xc1 0xb9
				   0x86 0xc4 0x6a 0xf7 0xb8 0xd4 0x15 0xea 0x9e 0x3c 0xf2 0x9e
				   0xc5 0x00 0x00 0x00>;
		dbg-domain = <0x80282ff9>;
		access-lvl = <0xc0000cc0 0x0cffffc3>;
		dbg-itvl = <0>;
		gsa-device = <&gsa>;
	};

	sjtag_gsa {
		compatible = "google,sjtag";
		ms-per-tick = <5590>;
		ipc-timeout-ms = <450>;
		pubkey = /bits/ 8 <0xc3 0x89 0x27 0x67 0xeb 0x7f 0x7d 0x37 0x41 0x04 0x74 0x0d
				   0x59 0x91 0xad 0x6c 0x14 0x8f 0xf5 0x9a 0x95 0xee 0x1e 0x4b
				   0x0c 0x61 0x62 0xe4 0x9c 0x0b 0x53 0x18 0xb2 0x25 0x0b 0x16
				   0x1c 0x67 0x14 0xe3 0x08 0x64 0x53 0xbe 0xcd 0x7e 0xa1 0x68
				   0xd8 0x03 0x78 0xd2 0x6b 0x55 0x46 0x43 0x3b 0xe8 0xda 0xb1
				   0xa9 0x8e 0xb1 0x89 0x91 0x00 0x00 0x00 0x4d 0x91 0xee 0xcf
				   0xb0 0x64 0x9a 0x30 0xbe 0xaa 0x62 0x37 0xbf 0x65 0xcb 0x69
				   0xee 0x8e 0x1c 0xeb 0x8b 0xf4 0xc5 0xbc 0x8c 0xbe 0x7b 0x0e
				   0x40 0x99 0xca 0xc8 0x48 0x48 0xf1 0xbf 0x3b 0xfb 0xb4 0x3f
				   0x24 0x19 0xe0 0x06 0x15 0xb0 0x91 0xd4 0x1e 0x96 0x4a 0x41
				   0xf4 0x5a 0x2a 0xe1 0xe7 0xc9 0xe7 0x1b 0xf1 0xd8 0xf4 0x7e
				   0x35 0x01 0x00 0x00>;
		dbg-domain = <0x0000006f>;
		access-lvl = <0x00000000 0x00003cff>;
		dbg-itvl = <0>;
		gsa-device = <&gsa>;
	};
};
